from typing import List, Optional, Iterable
from domain.models import Bar, Interval

class KlineRepo:
    async def upsert_1m(self, bars: Iterable[Bar]) -> None: ...
    async def upsert(self, bars: Iterable[Bar]) -> None: ...
    async def query(self, symbol: str, interval: Interval,
                    start: Optional[int], end: Optional[int], limit: int,
                    only_final: bool=True) -> List[Bar]: ...
    async def max_open_time(self, interval: Interval) -> Optional[int]: ...
    async def min_open_time(self, interval: Interval) -> Optional[int]: ...

class Cache:
    async def get_bytes(self, key: str): ...
    async def set_bytes(self, key: str, data: bytes, ttl_s: int): ...
